# Local development overrides (not used in production)
# Copy to ".env.local" and adjust values.

# --- AI Provider ---
OPENAI_API_KEY="YOUR_OPENAI_API_KEY"
EMBED_MODEL=text-embedding-3-small

# --- Databases (when running API inside docker compose) ---
# If running the API container with docker compose, these hosts resolve in the network:
DATABASE_URL=postgresql://postgres:postgres@messages-db:5432/voltagent
MEMORY_DATABASE_URL=postgresql://postgres:postgres@memory-db:5432/voltagent_memory
MEMORY_STORAGE_LIMIT=100

# If running the API on the host (not in docker), expose DB ports or adjust hosts accordingly.
# Example with exposed ports (uncomment and set compose to expose):
# DATABASE_URL=postgresql://postgres:postgres@localhost:5432/voltagent
# MEMORY_DATABASE_URL=postgresql://postgres:postgres@localhost:5433/voltagent_memory

# --- Qdrant ---
# Local Qdrant via docker compose (exposed at localhost:6333)
QDRANT_URL=http://localhost:6333

# Or Qdrant Cloud (preferred). These take precedence in the code:
# QDRANT_CLOUD_URL=https://YOUR-ID.aws.cloud.qdrant.0io:6333
# QDRANT_CLOUD_KEY=your-cloud-key
QDRANT_COLLECTION=voltagent-knowledge-base

# --- VoltOps (optional) ---
VOLTAGENT_PUBLIC_KEY="nothing"
VOLTAGENT_SECRET_KEY='nothin'

# --- App ---
NODE_ENV=development
PORT=3141
ALLOWED_ORIGIN=http://localhost:3000
JWT_SECRET= "nothing"
# Supabase Storage (uploads)
# Required to store uploaded files in Supabase instead of local disk
# Get these in your Supabase project settings
# If set, the app will upload to this bucket and serve files via signed URLs
SUPABASE_URL=https://<project-ref>.supabase.co
SUPABASE_SERVICE_KEY="nothing"
# Create a bucket in Supabase Storage (private recommended) and set its name:
SUPABASE_BUCKET=documents

# Public base URL of your API (used to fetch files during training when URLs are relative)
# Example for local dev: http://localhost:3141
# Example in Render: https://your-service.onrender.com
PUBLIC_BASE_URL=http://localhost:3141
