// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

model BusinessSubscription{
  id String @default(cuid()) @id
  name String
  description String?
  plan SubscriptionsPlans

  users User[]
  agentsIa AgentsIa[]
  createdAt DateTime @default(now())
  updateAte DateTime @updatedAt

  @@map("business_subscription")
}

enum SubscriptionsPlans{
  PRO
  PLUS
  ADVANCED
}

model User{
  id String @default(cuid()) @id 
  name String 
  email String @unique
  businessSubscriptionId String?
  businessSubscription BusinessSubscription? @relation(fields: [businessSubscriptionId], references: [id])
  passwordHash String
  role Role
  createdAt DateTime @default(now())
  updateAte DateTime @updatedAt

  agentIa AgentsIa[]

  @@map("user")

}

enum Role{
  USER
  SUPERVISOR
  SUPERVISOR_TENANT
  ADMIN
  SUPERADMIN
}


model AgentsIa{
  id String @default(cuid()) @id 
  name String
  type AgentIaTypes
  personScript String
  userId String 
  User User @relation(fields: [userId], references: [id])
  businessSubscriptionId String
  businessSubscription BusinessSubscription @relation(fields: [businessSubscriptionId], references: [id])

  createdAt DateTime @default(now())
  updateAte DateTime @updatedAt

    @@map("agents")

}

enum AgentIaTypes{
  ENDOMARKETING
  HR
  SDV
  FILES
}


model Document {
  id        String   @default(cuid()) @id
  name      String
  mimeType  String
  url       String   // URL p√∫blica ou protegida no Supabase Storage
  createdAt DateTime @default(now())
  updateAte DateTime @updatedAt

  @@map("documents")

}